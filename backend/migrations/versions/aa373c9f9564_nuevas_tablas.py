"""nuevas tablas

Revision ID: aa373c9f9564
Revises: 2a71ced1ad9e
Create Date: 2025-05-12 21:13:59.925620

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'aa373c9f9564'
down_revision = '2a71ced1ad9e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('bank', schema=None) as batch_op:
        batch_op.add_column(sa.Column('employee_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('bank_name', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('nit', sa.String(length=20), nullable=False))
        batch_op.create_unique_constraint('uq_bank_account_number', ['account_number'])
        batch_op.create_unique_constraint('uq_bank_bank_name', ['bank_name'])
        batch_op.create_unique_constraint('uq_bank_nit', ['nit'])
        batch_op.create_foreign_key('fk_bank_employee', 'employee', ['employee_id'], ['id'])
        batch_op.drop_column('name')

    with op.batch_alter_table('company', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nit', sa.String(length=20), nullable=False))
        batch_op.create_unique_constraint('uq_company_email', ['email'])
        batch_op.create_unique_constraint('uq_company_name', ['name'])
        batch_op.create_unique_constraint('uq_company_nit', ['nit'])

    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_employee_email', ['email'])

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.String(length=200), nullable=True))
        batch_op.create_unique_constraint('uq_role_name', ['name'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('company_id', sa.Integer(), nullable=False))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=70),
               existing_nullable=False)
        batch_op.create_unique_constraint('uq_user_email', ['email'])
        batch_op.create_foreign_key('fk_user_company', 'company', ['company_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint('fk_user_company', type_='foreignkey')
        batch_op.drop_constraint('uq_user_email', type_='unique')
        batch_op.alter_column('name',
               existing_type=sa.String(length=70),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.drop_column('company_id')

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_constraint('uq_role_name', type_='unique')
        batch_op.drop_column('description')

    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.drop_constraint('uq_employee_email', type_='unique')

    with op.batch_alter_table('company', schema=None) as batch_op:
        batch_op.drop_constraint('uq_company_nit', type_='unique')
        batch_op.drop_constraint('uq_company_name', type_='unique')
        batch_op.drop_constraint('uq_company_email', type_='unique')
        batch_op.drop_column('nit')

    with op.batch_alter_table('bank', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=50), nullable=False))
        batch_op.drop_constraint('fk_bank_employee', type_='foreignkey')
        batch_op.drop_constraint('uq_bank_nit', type_='unique')
        batch_op.drop_constraint('uq_bank_bank_name', type_='unique')
        batch_op.drop_constraint('uq_bank_account_number', type_='unique')
        batch_op.drop_column('nit')
        batch_op.drop_column('bank_name')
        batch_op.drop_column('employee_id')

    # ### end Alembic commands ###
